{"version":3,"sources":["utils/_DATA.js","actions/shared.js","actions/users.js","actions/questions.js","components/Question.js","components/Dashboard.js","components/LogIn.js","actions/authedUser.js","components/Logout.js","components/NavBar.js","components/Leaderboard.js","components/CreateQuestion.js","components/NotFound.js","components/QuestionInfo.js","components/App.js","reducers/index.js","reducers/users.js","reducers/questions.js","reducers/authedUser.js","middleware/logger.js","middleware/index.js","index.js"],"names":["users","sarahedo","id","name","avatarURL","answers","am8ehyc8byjqgar0jgpub9","loxhs1bqm25b708cmbf3g","questions","tylermcginnis","vthrdm985a262al8qx3do","xj352vofupe1dqz9emx13r","johndoe","author","timestamp","optionOne","votes","text","optionTwo","_saveQuestion","question","Promise","res","rej","authedUser","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","concat","handleInitialData","dispatch","all","then","type","receiveUsers","receiveQuestions","handleAnswer","qid","option","getState","answer","_saveQuestionAnswer","saveQuestionAnswer","auth","saveUserAnswer","Question","this","props","user","Card","Body","Subtitle","className","src","alt","Title","to","Text","Component","connect","state","qID","Dashboard","answeredQuestions","unansweredQuestions","Tabs","defaultActiveKey","transition","Tab","eventKey","title","map","key","Object","keys","sort","a","b","filter","includes","LogIn","userId","onFormSubmit","event","authenticate","alert","preventDefault","Form","Group","controlId","Label","Control","as","value","onChange","e","setState","target","disabled","Button","onClick","setAuthedUser","Logout","NavBar","navOpen","Container","Navbar","bg","Brand","Toggle","Collapse","Nav","activeKey","Item","Link","withRouter","userScore","length","values","i","CreateQuestion","redirect","handleSubmit","addQuestion","onSubmit","placeholder","addUserQuestion","NotFound","Header","QuestionInfo","selectedOption","hasOwnProperty","votesOptionOne","votesOptionTwo","total","percentageOne","toFixed","percentageTwo","style","width","ProgressBar","label","Badge","pill","variant","Check","match","params","App","noAuthedUser","path","component","exact","Leaderboard","combineReducers","action","logger","store","next","console","group","log","returnValue","groupEnd","applyMiddleware","thunk","createStore","reducer","middleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab1b49cf.chunk.js","sourcesContent":["let users = {\n  sarahedo: {\n    id: \"sarahedo\",\n    name: \"Sarah Edo\",\n    avatarURL: \"https://avatars.dicebear.com/api/bottts/hello.svg?w=60&h=60\",\n    answers: {\n      \"8xf0y6ziyjabvozdd253nd\": \"optionOne\",\n      \"6ni6ok3ym7mf1p33lnez\": \"optionTwo\",\n      am8ehyc8byjqgar0jgpub9: \"optionTwo\",\n      loxhs1bqm25b708cmbf3g: \"optionTwo\",\n    },\n    questions: [\"8xf0y6ziyjabvozdd253nd\", \"am8ehyc8byjqgar0jgpub9\"],\n  },\n  tylermcginnis: {\n    id: \"tylermcginnis\",\n    name: \"Tyler McGinnis\",\n    avatarURL: \"https://avatars.dicebear.com/api/bottts/dog.svg?w=60&h=60\",\n    answers: {\n      vthrdm985a262al8qx3do: \"optionOne\",\n      xj352vofupe1dqz9emx13r: \"optionTwo\",\n    },\n    questions: [\"loxhs1bqm25b708cmbf3g\", \"vthrdm985a262al8qx3do\"],\n  },\n  johndoe: {\n    id: \"johndoe\",\n    name: \"John Doe\",\n    avatarURL: \"https://avatars.dicebear.com/api/bottts/bird.svg?w=60&h=60\",\n    answers: {\n      xj352vofupe1dqz9emx13r: \"optionOne\",\n      vthrdm985a262al8qx3do: \"optionTwo\",\n      \"6ni6ok3ym7mf1p33lnez\": \"optionTwo\",\n    },\n    questions: [\"6ni6ok3ym7mf1p33lnez\", \"xj352vofupe1dqz9emx13r\"],\n  },\n};\n\nlet questions = {\n  \"8xf0y6ziyjabvozdd253nd\": {\n    id: \"8xf0y6ziyjabvozdd253nd\",\n    author: \"sarahedo\",\n    timestamp: 1467166872634,\n    optionOne: {\n      votes: [\"sarahedo\"],\n      text: \"have horrible short term memory\",\n    },\n    optionTwo: {\n      votes: [],\n      text: \"have horrible long term memory\",\n    },\n  },\n  \"6ni6ok3ym7mf1p33lnez\": {\n    id: \"6ni6ok3ym7mf1p33lnez\",\n    author: \"johndoe\",\n    timestamp: 1468479767190,\n    optionOne: {\n      votes: [],\n      text: \"become a superhero\",\n    },\n    optionTwo: {\n      votes: [\"johndoe\", \"sarahedo\"],\n      text: \"become a supervillain\",\n    },\n  },\n  am8ehyc8byjqgar0jgpub9: {\n    id: \"am8ehyc8byjqgar0jgpub9\",\n    author: \"sarahedo\",\n    timestamp: 1488579767190,\n    optionOne: {\n      votes: [],\n      text: \"be telekinetic\",\n    },\n    optionTwo: {\n      votes: [\"sarahedo\"],\n      text: \"be telepathic\",\n    },\n  },\n  loxhs1bqm25b708cmbf3g: {\n    id: \"loxhs1bqm25b708cmbf3g\",\n    author: \"tylermcginnis\",\n    timestamp: 1482579767190,\n    optionOne: {\n      votes: [],\n      text: \"be a front-end developer\",\n    },\n    optionTwo: {\n      votes: [\"sarahedo\"],\n      text: \"be a back-end developer\",\n    },\n  },\n  vthrdm985a262al8qx3do: {\n    id: \"vthrdm985a262al8qx3do\",\n    author: \"tylermcginnis\",\n    timestamp: 1489579767190,\n    optionOne: {\n      votes: [\"tylermcginnis\"],\n      text: \"find $50 yourself\",\n    },\n    optionTwo: {\n      votes: [\"johndoe\"],\n      text: \"have your best friend find $500\",\n    },\n  },\n  xj352vofupe1dqz9emx13r: {\n    id: \"xj352vofupe1dqz9emx13r\",\n    author: \"johndoe\",\n    timestamp: 1493579767190,\n    optionOne: {\n      votes: [\"johndoe\"],\n      text: \"write JavaScript\",\n    },\n    optionTwo: {\n      votes: [\"tylermcginnis\"],\n      text: \"write Swift\",\n    },\n  },\n};\n\nfunction generateUID() {\n  return (\n    Math.random().toString(36).substring(2, 15) +\n    Math.random().toString(36).substring(2, 15)\n  );\n}\n\nexport function _getUsers() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...users }), 1000);\n  });\n}\n\nexport function _getQuestions() {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({ ...questions }), 1000);\n  });\n}\n\nfunction formatQuestion({ optionOneText, optionTwoText, author }) {\n  return {\n    id: generateUID(),\n    timestamp: Date.now(),\n    author,\n    optionOne: {\n      votes: [],\n      text: optionOneText,\n    },\n    optionTwo: {\n      votes: [],\n      text: optionTwoText,\n    },\n  };\n}\n\nexport function _saveQuestion(question) {\n  return new Promise((res, rej) => {\n    const authedUser = question.author;\n    const formattedQuestion = formatQuestion(question);\n\n    setTimeout(() => {\n      questions = {\n        ...questions,\n        [formattedQuestion.id]: formattedQuestion,\n      };\n\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          questions: users[authedUser].questions.concat([formattedQuestion.id]),\n        },\n      };\n\n      res(formattedQuestion);\n    }, 1000);\n  });\n}\n\nexport function _saveQuestionAnswer({ authedUser, qid, answer }) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      users = {\n        ...users,\n        [authedUser]: {\n          ...users[authedUser],\n          answers: {\n            ...users[authedUser].answers,\n            [qid]: answer,\n          },\n        },\n      };\n\n      questions = {\n        ...questions,\n        [qid]: {\n          ...questions[qid],\n          [answer]: {\n            ...questions[qid][answer],\n            votes: questions[qid][answer].votes.concat([authedUser]),\n          },\n        },\n      };\n\n      res();\n    }, 500);\n  });\n}\n","import { receiveUsers, addUserQuestion, saveUserAnswer } from \"./users\";\nimport { receiveQuestions, addQuestion, saveQuestionAnswer } from \"./questions\";\nimport { _getQuestions, _getUsers, _saveQuestionAnswer, _saveQuestion } from \"../utils/_DATA\";\n\nexport function getInitialData() {\n  return Promise.all([_getUsers(), _getQuestions()]).then(\n    ([users, questions]) => ({\n      users,\n      questions,\n    })\n  );\n}\n\nexport function handleInitialData() {\n  return (dispatch) => {\n    return getInitialData().then(({ users, questions }) => {\n      dispatch(receiveUsers(users));\n      dispatch(receiveQuestions(questions));\n    });\n  };\n}\n\nexport function handleAddQuestion(optionOneText, optionTwoText) {\n  return (dispatch, getState) => {\n    const { authedUser } = getState();\n    return _saveQuestion({\n      optionOneText,\n      optionTwoText,\n      author: authedUser,\n    }).then((question) => {\n      dispatch(addQuestion(question));\n      dispatch(addUserQuestion(authedUser, question.id));\n    });\n  };\n}\n\nexport function handleAnswer(qid, option) {\n  return (dispatch, getState) => {\n    const { authedUser } = getState();\n    const saveObj = {\n      authedUser: authedUser,\n      qid,\n      answer: option,\n    };\n    _saveQuestionAnswer(saveObj).then(() => {\n      dispatch(saveQuestionAnswer(authedUser, qid, option));\n      dispatch(saveUserAnswer(authedUser, qid, option));\n    });\n  };\n}\n","export const RECEIVE_USERS = \"RECEIVE_USERS\";\nexport const ADD_USER_QUESTION = \"ADD_USER_QUESTION\";\nexport const USER_ANSWER_QUESTION = \"USER_ANSWER_QUESTION\";\n\nexport function receiveUsers(users) {\n  return {\n    type: RECEIVE_USERS,\n    users,\n  };\n}\n\nexport function addUserQuestion(authedUser, qid) {\n  return {\n    type: ADD_USER_QUESTION,\n    authedUser,\n    qid,\n  };\n}\n\nexport function saveUserAnswer(auth, qid, option) {\n  return {\n    type: USER_ANSWER_QUESTION,\n    auth,\n    qid,\n    option,\n  };\n}\n","export const RECEIVE_QUESTIONS = \"RECEIVE_QUESTIONS\";\nexport const ADD_QUESTION = \"ADD_QUESTION\";\nexport const SAVE_QUESTION_ANSWER = \"SAVE_QUESTION_ANSWER\";\n\nexport function receiveQuestions(questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions,\n  };\n}\n\nexport function saveQuestionAnswer(authedUser, qid, answer) {\n  return {\n    type: SAVE_QUESTION_ANSWER,\n    authedUser,\n    qid,\n    answer,\n  };\n}\n\nexport function addQuestion(question) {\n  return {\n    type: ADD_QUESTION,\n    question,\n  };\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Card from \"react-bootstrap/Card\";\n\nclass Question extends Component {\n  render() {\n    const { question, user } = this.props;\n    return (\n      <Card>\n        <Card.Body>\n          <Card.Subtitle className=\"mb-2 text-muted\">\n            <img\n              src={user[question.author].avatarURL}\n              alt={`Avatar of ${user.name}`}\n            />{\" \"}\n            {user[question.author].name} asks\n          </Card.Subtitle>\n          <Card.Title>Would You rather?</Card.Title>\n          <Link to={`/questions/${question.id}`}>\n            <Card.Text>{question.optionOne.text} or...</Card.Text>\n          </Link>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nfunction mapStateToprops(state, { qID }) {\n  return {\n    question: state.questions[qID],\n    authedUser: state.authedUser,\n    user: state.users,\n  };\n}\n\nexport default connect(mapStateToprops)(Question);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Question from \"./Question\";\n\nclass Dashboard extends Component {\n  render() {\n    const { answeredQuestions, unansweredQuestions } = this.props;\n    return (\n      <div>\n        <Tabs\n          defaultActiveKey=\"unanswered\"\n          transition={false}\n          id=\"questions-tab\"\n        >\n          <Tab eventKey=\"unanswered\" title=\"Unanswered Questions\">\n            <div>\n              {unansweredQuestions.map((qID) => (\n                <div key={qID}>\n                  <Question qID={qID} />\n                </div>\n              ))}\n            </div>\n          </Tab>\n          <Tab eventKey=\"answered\" title=\"Answered Questions\">\n            <div>\n              {answeredQuestions.map((qID) => (\n                <div key={qID}>\n                  <Question qID={qID} />\n                </div>\n              ))}\n            </div>\n          </Tab>\n        </Tabs>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ questions, users, authedUser }) {\n  const user = users[authedUser];\n  const answeredQuestions = Object.keys(user.answers).sort(\n    (a, b) => questions[b].timestamp - questions[a].timestamp\n  );\n  const unansweredQuestions = Object.keys(questions)\n    .filter((question) => !answeredQuestions.includes(question))\n    .sort((a, b) => questions[b].timestamp - questions[a].timestamp);\n  return {\n    answeredQuestions: answeredQuestions,\n    unansweredQuestions,\n    authedUser,\n  };\n}\n\nexport default connect(mapStateToProps)(Dashboard);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setAuthedUser } from \"../actions/authedUser\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nclass LogIn extends Component {\n  state = {\n    userId: \"\",\n  };\n\n  onFormSubmit = (event) => {\n    const { userId } = this.state;\n    const { authenticate } = this.props;\n    if (userId) {\n      authenticate(userId);\n    } else {\n      alert(\"Please select a user to continue\");\n    }\n    event.preventDefault();\n  };\n\n  render() {\n    const { users } = this.props;\n    const { userId } = this.state;\n\n    return (\n      <div>\n        <Form>\n          <Form.Group controlId=\"exampleForm.ControlSelect1\">\n            <Form.Label>Login to continue:</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={userId}\n              onChange={(e) => this.setState({ userId: e.target.value })}\n            >\n              <option value=\"\" disabled>\n                Select user\n              </option>\n              {Object.keys(users).map((user) => (\n                <option value={user} key={user}>\n                  {users[user].name}\n                </option>\n              ))}\n            </Form.Control>\n          </Form.Group>\n          <Button\n            className=\"btn\"\n            disabled={userId === null}\n            onClick={this.onFormSubmit}\n          >\n            Login\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ users }) {\n  return {\n    users,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    authenticate: (id) => {\n      dispatch(setAuthedUser(id));\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogIn);\n","export const SET_AUTHED_USER = \"SET_AUTHED_USER\";\nexport const CLEAR_AUTHED_USER = \"CLEAR_AUTHED_USER\";\n\nexport function setAuthedUser(id) {\n  return {\n    type: SET_AUTHED_USER,\n    id,\n  };\n}\n\nexport function clearAuthedUser() {\n  return {\n    type: CLEAR_AUTHED_USER,\n  };\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { clearAuthedUser } from \"../actions/authedUser\";\n\nclass Logout extends Component {\n  componentDidMount() {\n    this.props.dispatch(clearAuthedUser());\n  }\n  render() {\n    return <Redirect to=\"/\" />;\n  }\n}\n\nexport default connect()(Logout);\n","import { Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport React, { Component, Fragment } from \"react\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Container from \"react-bootstrap/Container\";\n\nclass NavBar extends Component {\n  state = {\n    navOpen: false,\n  };\n\n  render() {\n    const { authedUser, user } = this.props;\n    return (\n      <Container>\n        <Navbar bg=\"light\" className=\"bg-light\">\n          <Navbar.Brand>\n            <Link to={\"/\"} className=\"navbar-brand\">\n              Would You Rather?\n            </Link>\n          </Navbar.Brand>\n          {authedUser && (\n            <Fragment>\n              <Navbar.Toggle\n                onClick={() =>\n                  this.setState({\n                    navOpen: !this.state.navOpen,\n                  })\n                }\n              />\n              <Navbar.Collapse className=\"justify-content-end\">\n                <Nav activeKey=\"/\">\n                  <Nav.Item>\n                    <Nav.Link as={Link} to=\"/\">\n                      Home\n                    </Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link as={Link} to=\"/leaderboard\">\n                      Leaderboard\n                    </Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link as={Link} to=\"/add\">\n                      New Question\n                    </Nav.Link>\n                  </Nav.Item>\n                  <Nav.Item>\n                    <Nav.Link as={Link} to=\"/Logout\">\n                      Logout\n                    </Nav.Link>\n                  </Nav.Item>\n\n                  <Nav.Item>\n                    <img\n                      src={user.avatarURL}\n                      className=\"nav-avatar\"\n                      alt={`Avatar of ${user.name}`}\n                    />\n                  </Nav.Item>\n                  <Nav.Item className=\"nav-user\">Welcome {user.name}</Nav.Item>\n                </Nav>\n              </Navbar.Collapse>\n            </Fragment>\n          )}\n        </Navbar>\n      </Container>\n    );\n  }\n}\n\nfunction mapStateToProps({ authedUser, users }) {\n  return {\n    authedUser,\n    user: users[authedUser],\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(NavBar));\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Card from \"react-bootstrap/Card\";\n\nconst Leaderboard = (props) => {\n  const { users } = props;\n  return (\n    <div>\n      {users.map((user, i) => (\n        <Card key={i}>\n          <img alt=\"avatar\" className=\"avatar\" src={user.avatarURL} />\n          <Card.Title>{user.name}</Card.Title>\n          <Card.Text>{Object.keys(user.answers).length} Answered</Card.Text>\n          <Card.Text>{user.questions.length} Created</Card.Text>\n          <Card.Text>\n            {Object.keys(user.answers).length + user.questions.length} Total\n          </Card.Text>\n        </Card>\n      ))}\n    </div>\n  );\n};\n\nfunction mapStateToProps({ users }) {\n  const userScore = (users) =>\n    Object.keys(users.answers).length + users.questions.length;\n  return {\n    users: Object.values(users).sort((a, b) => userScore(b) - userScore(a)),\n  };\n}\n\nexport default connect(mapStateToProps)(Leaderboard);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { handleAddQuestion } from \"../actions/shared\";\nimport { Redirect } from \"react-router-dom\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nclass CreateQuestion extends Component {\n  state = {\n    optionOne: \"\",\n    optionTwo: \"\",\n    redirect: false,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { optionOne, optionTwo } = this.state;\n    this.props.addQuestion(optionOne, optionTwo);\n    this.setState({ redirect: true });\n  };\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to=\"/\" />;\n    }\n    const { optionOne, optionTwo } = this.state;\n    return (\n      <div>\n        <Card>\n          <Card.Body>\n            <Card.Title>Would You rather?</Card.Title>\n\n            <Form onSubmit={this.handleSubmit}>\n              <Form.Group>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Question One\"\n                  value={optionOne}\n                  onChange={(e) => this.setState({ optionOne: e.target.value })}\n                />\n                <br />\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Question Two\"\n                  value={optionTwo}\n                  onChange={(e) => this.setState({ optionTwo: e.target.value })}\n                />\n                <br />\n                <Button\n                  disabled={optionOne === \"\" || optionTwo === \"\"}\n                  type=\"submit\"\n                >\n                  Submit\n                </Button>\n              </Form.Group>\n            </Form>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addQuestion: (optionOne, optionTwo) => {\n      dispatch(handleAddQuestion(optionOne, optionTwo));\n    },\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(CreateQuestion);\n","import React from \"react\";\n\nimport Card from \"react-bootstrap/Card\";\n\nconst NotFound = () => (\n  <Card>\n    <Card.Header>404</Card.Header>\n    <Card.Body>\n      <Card.Title>Page Not Found</Card.Title>\n    </Card.Body>\n  </Card>\n);\n\nexport default NotFound;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { handleAnswer } from \"../actions/shared\";\nimport NotFound from \"./NotFound\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport Badge from \"react-bootstrap/Badge\";\n\nclass QuestionInfo extends Component {\n  state = {\n    selectedOption: \"\",\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.saveQuestionAnswer(this.state.selectedOption);\n  };\n\n  render() {\n    const { question, users, authedUser } = this.props;\n    if (!question) return <NotFound />;\n    const { selectedOption } = this.state;\n    const author = users[question.author];\n    const answers = users[authedUser].answers;\n    let answer;\n    if (answers.hasOwnProperty(question.id)) {\n      answer = answers[question.id];\n    }\n\n    const votesOptionOne =\n      question && question.optionOne.votes\n        ? question.optionOne.votes.length\n        : 0;\n    const votesOptionTwo =\n      question && question.optionTwo.votes\n        ? question.optionTwo.votes.length\n        : 0;\n    const total = votesOptionOne + votesOptionTwo;\n\n    const percentageOne = ((votesOptionOne / total) * 100).toFixed(1);\n    const percentageTwo = ((votesOptionTwo / total) * 100).toFixed(1);\n\n    return (\n      <div>\n        {answer ? (\n          <Card style={{ width: \"30rem\" }}>\n            <Card.Body>\n              <Card.Title className=\"mb-2\">\n                <img src={author.avatarURL} alt={`Avatar of ${author.name}`} />{\" \"}\n                Asked by {author.name}\n              </Card.Title>\n              <Card.Subtitle className=\"mb-2 text-muted\">Results</Card.Subtitle>\n              <Card.Text>Would you rather {question.optionOne.text}?</Card.Text>\n              <ProgressBar now={percentageOne} label={`${percentageOne}%`} />\n              <Card.Text>\n                {votesOptionOne} out of {total} {\"  \"}\n                {answer === \"optionOne\" ? (\n                  <Badge pill variant=\"warning\">\n                    your vote\n                  </Badge>\n                ) : (\n                  \"\"\n                )}\n              </Card.Text>\n              <Card.Text>Would you rather {question.optionTwo.text}?</Card.Text>\n              <ProgressBar now={percentageTwo} label={`${percentageTwo}%`} />\n              <Card.Text>\n                {votesOptionTwo} out of {total} {\"  \"}\n                {answer === \"optionTwo\" ? (\n                  <Badge pill variant=\"warning\">\n                    your vote\n                  </Badge>\n                ) : (\n                  \"\"\n                )}\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        ) : (\n          <Card>\n            <Card.Body>\n              <Card.Subtitle className=\"mb-2 text-muted\">\n                <img src={author.avatarURL} alt={`Avatar of ${author.name}`} />{\" \"}\n                {author.name} asks\n              </Card.Subtitle>\n              <Card.Title>Would You rather?</Card.Title>\n              <Form onSubmit={this.handleSubmit}>\n                <fieldset>\n                  <Form.Group>\n                    <Form.Check\n                      onChange={(e) =>\n                        this.setState({ selectedOption: e.target.value })\n                      }\n                      type=\"radio\"\n                      value=\"optionOne\"\n                      label={question.optionOne.text}\n                      name=\"option\"\n                      id={question.optionOne.text}\n                    />\n                    <Form.Check\n                      onChange={(e) =>\n                        this.setState({ selectedOption: e.target.value })\n                      }\n                      type=\"radio\"\n                      value=\"optionTwo\"\n                      label={question.optionTwo.text}\n                      name=\"option\"\n                      id={question.optionOne.text}\n                    />\n                  </Form.Group>\n                  <Button disabled={selectedOption === \"\"} type=\"submit\">\n                    Submit\n                  </Button>\n                </fieldset>\n              </Form>\n            </Card.Body>\n          </Card>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ questions, users, authedUser }, { match }) {\n  const { id } = match.params;\n  const question = questions[id] ? questions[id] : null;\n  //const author = users[question.author];\n  //const answers = users[authedUser].answers;\n  //let answer;\n  //if (answers.hasOwnProperty(question.id)) {\n  //  answer = answers[question.id];\n  //}\n\n  //const votesOptionOne =\n  //  question && question.optionOne.votes ? question.optionOne.votes.length : 0;\n  //const votesOptionTwo =\n  //  question && question.optionTwo.votes ? question.optionTwo.votes.length : 0;\n  //const total = votesOptionOne + votesOptionTwo;\n\n  //const percentageOne = ((votesOptionOne / total) * 100).toFixed(1);\n  //const percentageTwo = ((votesOptionTwo / total) * 100).toFixed(1);\n  return {\n    question,\n    users,\n    authedUser,\n    //author,\n    //answer,\n    //total,\n    //percentageOne,\n    //percentageTwo,\n    //votesOptionOne,\n    //votesOptionTwo,\n  };\n}\n\nfunction mapDispatchToProps(dispatch, props) {\n  const { id } = props.match.params;\n\n  return {\n    saveQuestionAnswer: (answer) => {\n      dispatch(handleAnswer(id, answer));\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuestionInfo);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { handleInitialData } from \"../actions/shared\";\nimport Dashboard from \"./Dashboard\";\nimport LogIn from \"./LogIn\";\nimport Logout from \"./Logout\";\nimport NavBar from \"./NavBar\";\nimport Leaderboard from \"./Leaderboard\";\nimport CreateQuestion from \"./CreateQuestion\";\nimport QuestionInfo from \"./QuestionInfo\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.handleInitialData();\n  }\n  render() {\n    const { noAuthedUser } = this.props;\n    return (\n      <Router>\n        <NavBar />\n        <div className=\"main-content\">\n          <Switch>\n            {noAuthedUser ? (\n              <Route path=\"/\" component={LogIn} />\n            ) : (\n              <Route>\n                <Route path=\"/\" exact component={Dashboard} />\n                <Route path=\"/leaderboard\" component={Leaderboard} />\n                <Route path=\"/add\" component={CreateQuestion} />\n                <Route path=\"/questions/:id\" component={QuestionInfo} />\n                <Route exact path=\"/logout\" component={Logout} />\n                \n              </Route>\n            )}\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\nfunction mapStateToProps({ authedUser }) {\n  return {\n    noAuthedUser: authedUser === null,\n  };\n}\nfunction mapDispatchToProps(dispatch) {\n  return {\n    handleInitialData: () => {\n      dispatch(handleInitialData());\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from \"redux\";\nimport users from \"./users\";\nimport questions from \"./questions\";\nimport authedUser from \"./authedUser\";\n\nexport default combineReducers({\n  users,\n  questions,\n  authedUser,\n});\n","import {\n  RECEIVE_USERS,\n  USER_ANSWER_QUESTION,\n  ADD_USER_QUESTION,\n} from \"../actions/users\";\n\nexport default function users(state = {}, action) {\n  switch (action.type) {\n    case RECEIVE_USERS:\n      return {\n        ...state,\n        ...action.users,\n      };\n    case USER_ANSWER_QUESTION:\n      return {\n        ...state,\n        [action.auth]: {\n          ...state[action.auth],\n          answers: {\n            ...state[action.auth].answers,\n            [action.qid]: action.option,\n          },\n        },\n      };\n    case ADD_USER_QUESTION:\n      return {\n        ...state,\n        [action.authedUser]: {\n          ...state[action.authedUser],\n          questions: state[action.authedUser].questions.concat([action.qid]),\n        },\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  RECEIVE_QUESTIONS,\n  ADD_QUESTION,\n  SAVE_QUESTION_ANSWER,\n} from \"../actions/questions\";\n\nexport default function questions(state = {}, action) {\n  switch (action.type) {\n    case RECEIVE_QUESTIONS:\n      return {\n        ...state,\n        ...action.questions,\n      };\n    case ADD_QUESTION:\n      const { question } = action;\n      return {\n        ...state,\n        [question.id]: question,\n      };\n    case SAVE_QUESTION_ANSWER:\n      const { authedUser, qid, answer } = action;\n      return {\n        ...state,\n        [qid]: {\n          ...state[qid],\n          [answer]: {\n            ...state[qid][answer],\n            votes: state[qid][answer].votes.concat([authedUser]),\n          },\n        },\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_AUTHED_USER, CLEAR_AUTHED_USER } from \"../actions/authedUser\";\n\nexport default function authedUser(state = null, action) {\n  switch (action.type) {\n    case SET_AUTHED_USER:\n      return action.id;\n    case CLEAR_AUTHED_USER:\n      return null;\n    default:\n      return state;\n  }\n}\n","const logger = (store) => (next) => (action) => {\n  console.group(action.type);\n  console.log(\"The action: \", action);\n  const returnValue = next(action);\n  console.log(\"The new state: \", store.getState());\n  console.groupEnd();\n  return returnValue;\n};\n\nexport default logger;\n","import thunk from \"redux-thunk\";\nimport logger from \"./logger\";\nimport { applyMiddleware } from \"redux\";\n\nexport default applyMiddleware(thunk, logger);\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport reducer from './reducers'\nimport middleware from './middleware'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nconst store = createStore(reducer, middleware)\n\nReactDOM.render(\n<Provider store={store}>\n  <App />\n</Provider>, document.getElementById('root'))"],"sourceRoot":""}